<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>天道酬勤</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://bentoule.github.io/"/>
  <updated>2016-08-23T03:20:37.361Z</updated>
  <id>http://bentoule.github.io/</id>
  
  <author>
    <name>Jason</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>GitHub+Hexo配置系列教程-GitHub配置(二)</title>
    <link href="http://bentoule.github.io/2016/08/23/GitHub-Hexo%E9%85%8D%E7%BD%AE%E7%B3%BB%E5%88%97%E6%95%99%E7%A8%8B-GitHub%E9%85%8D%E7%BD%AE-%E4%BA%8C/"/>
    <id>http://bentoule.github.io/2016/08/23/GitHub-Hexo配置系列教程-GitHub配置-二/</id>
    <published>2016-08-23T02:41:06.000Z</published>
    <updated>2016-08-23T03:20:37.361Z</updated>
    
    <content type="html"><![CDATA[<p>上一篇中我们介绍了如何搭建Hexo本地博客,现在我们开始配置GitHub并进行关联Hexo</p>
<h1 id="GitHub端操作"><a href="#GitHub端操作" class="headerlink" title="GitHub端操作"></a>GitHub端操作</h1><p><strong>注册GitHub</strong></p>
<p>在此处进行注册,操作比较简单,再次就不多做赘述,不熟悉的百度查看一下教程.</p>
<p><strong>创建Repository</strong></p>
<p>在自己GitHub主页点击右上角,创建Repository </p>
<p><img src="/img/2016/08/23/1.png" alt=""></p>
<p>进入创建界面后,注意:<strong>名字一定要与用户名一致</strong>, 比如我的用户名是 bentoule,创建的Respository一定要是bentoule.github.io<br><img src="/img/2016/08/23/2.png" alt=""></p>
<p>然后点击<strong>Create repository</strong>按钮,然后进入到该respository界面,点击右边Settings, 拉到最下方,找到GitHub Pages模块,点击 <strong>Launch automatic page generator</strong>,让GitHub生成GitHubPager<br><img src="/img/2016/08/23/3.png" alt=""></p>
<p>然后进入下一页,点击页面右下角绿色框按钮<strong> Continue to layouts</strong>进入下一页<br><img src="/img/2016/08/23/4.png" alt=""></p>
<p>下一个界面是选择主题,但选择哪个无所谓,因为后面将要与Hexo关联,站点所有内容都将被Hexo博客所替换,所以直接点击<strong> Publish page </strong><br><img src="/img/2016/08/23/5.png" alt=""></p>
<p>然后,就可以进入到该界面,即代表设置完成,访问bentoule.github.io即可看到自己独立的该域名网站.<br><img src="/img/2016/08/23/6.png" alt=""></p>
<p>此时点击Settings进入即可看到如下提示:Your sit is published at <a href="http://bentoule.github.io">http://bentoule.github.io</a><br><img src="/img/2016/08/23/7.png" alt=""></p>
<h1 id="配置SSH-Keys"><a href="#配置SSH-Keys" class="headerlink" title="配置SSH Keys"></a>配置SSH Keys</h1><p>SSH密钥是一个用来识别值得信赖的电脑在进行GitHub一些操作时,不用输入密码。用户可以生成一个SSH密钥，并按照本节所述的方法将公共密钥添加到你的GitHub帐户。</p>
<p>我们建议你定期检查SSH密钥列表，并删除任何一个长时间没有使用的秘钥.</p>
<blockquote>
<p>小贴士:如果你安装的有GitHub的桌面版 ，你可以用它来克隆库而不是进行SSH密钥处理。它还配备了Git的Bash的工具，这是在Windows上运行的git命令的首选方式。<br>检测电脑中是否已有SSH 秘钥</p>
</blockquote>
<p>在你生成SSH秘钥之前,如果你有任意一个SSH秘钥,你都要检测一下;</p>
<p><strong>检测步骤:</strong></p>
<ol>
<li>在任意目录右键,选择 Git Bash</li>
<li>输入 ls -al ~/.ssh 命令查看是否存在SSH秘钥 </li>
</ol>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">ls -al ~/.ssh </div><div class="line"><span class="comment"># Lists the files in your .ssh directory, if they exist</span></div></pre></td></tr></table></figure>
<ol>
<li><p>如果你看到有公共的SSH秘钥已经存在的话,请检测SSH列表的路径;</p>
<p>默认情况下,公共秘钥的文件名是下列之一:</p>
</li>
</ol>
<ul>
<li>id_dsa.pub</li>
<li>id_ecdsa.pub</li>
<li>id_ecdsa.pub</li>
<li>id_ecdsa.pub</li>
</ul>
<p>如果没有一个现有的公共和私有密钥，或者不希望使用任何可用的SSH秘钥来连接到GitHub上，请生成一个新的SSH密钥。</p>
<p>如果你看到列出现有的公共和私有密钥（例如id_rsa.pub和id_rsa ），你想使用连接到GitHub上，你可以将你的SSH密钥放到ssh-agent(下面会写到) .</p>
<blockquote>
<p>小贴士:如果你看到的〜/ .ssh不存在或者错误，不要担心！我们将创建它，并生成一个新的SSH密钥</p>
</blockquote>
<p><strong>生成新的SSH密钥并将其添加到ssh-agent中</strong></p>
<ul>
<li>在任意目录右键,选择Git Bash</li>
<li>输入ssh-keygen -t rsa -b 4096 -C “your_email@example.com” (将邮箱替换为你自己的地址)</li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ ssh-keygen -t rsa -b 4096 -C <span class="string">"your_email@example.com"</span></div><div class="line"><span class="comment"># Creates a new ssh key, using the provided email as a label</span></div><div class="line">Generating public/private rsa key pair.</div></pre></td></tr></table></figure>
<ol>
<li><p>当你提示“输入要保存密钥的文件”，然后按Enter键。接受默认文件位置。</p>
<p> Enter a file in which to save the key (/Users/you/.ssh/id_rsa): [Press enter]</p>
</li>
<li><p>在提示符下，键入一个安全密码(可以为空)。有关详细信息，请参阅“使用SSH密钥口令”一节。<br> Enter passphrase (empty for no passphrase): [Type a passphrase]<br> Enter same passphrase again: [Type passphrase again]</p>
</li>
</ol>
<ol>
<li><p>将ssh秘钥添加到 ssh-agent,在任意目录右键,选择Git Bash后输入命令确保ssh-agent的启用</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># start the ssh-agent in the background</span></div><div class="line">$ <span class="built_in">eval</span> <span class="string">"<span class="variable">$(ssh-agent -s)</span>"</span></div><div class="line"><span class="comment"># Agent pid 59566</span></div><div class="line">``` </div><div class="line">- 添加你的SSH密钥到ssh-agent 。如果你使用现有的SSH密钥，而不是生成新的SSH密钥，你需要替换现有的私有密钥文件的名称，以取代id_rsa的命令。</div><div class="line">``` bash</div><div class="line">$ ssh-add ~/.ssh/id_rsa</div><div class="line">``` </div><div class="line">**添加新的SSH密钥到你的帐户GitHub中**</div><div class="line"></div><div class="line">要配置GitHub的帐户需要使用新的（或现有的） SSH密钥，你还需要将其添加到你的帐户GitHub中。</div><div class="line"></div><div class="line">**1.复制SSH密钥到剪贴板**</div><div class="line">&gt; </div><div class="line">&gt; 小贴士:如果你的SSH密钥文件具有与示例代码不同的名称，请修改文件名，以符合当前的设置。当复制你的秘钥时，不添加任何新行或空格。</div><div class="line"></div><div class="line">``` bash</div><div class="line">$ clip &lt; ~/.ssh/id_rsa.pub</div></pre></td></tr></table></figure>
<h1 id="Copies-the-contents-of-the-id-rsa-pub-file-to-your-clipboard"><a href="#Copies-the-contents-of-the-id-rsa-pub-file-to-your-clipboard" class="headerlink" title="Copies the contents of the id_rsa.pub file to your clipboard"></a>Copies the contents of the id_rsa.pub file to your clipboard</h1><blockquote>
<p>小贴士:如果clip命令没有执行，你可以找到隐藏的.ssh文件夹中，打开你喜欢的文本编辑器文件，并将其复制到剪贴板,一般是在C:\Users\yourname.ssh文件夹下的id_rsa.pub文件中,使用文本文档打开后复制内容即可</p>
</blockquote>
</li>
</ol>
<p><strong>2.在GitHub任何界面中,点击右上角个人资料照片,选择Settings </strong></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;上一篇中我们介绍了如何搭建Hexo本地博客,现在我们开始配置GitHub并进行关联Hexo&lt;/p&gt;
&lt;h1 id=&quot;GitHub端操作&quot;&gt;&lt;a href=&quot;#GitHub端操作&quot; class=&quot;headerlink&quot; title=&quot;GitHub端操作&quot;&gt;&lt;/a&gt;GitHub
    
    </summary>
    
      <category term="HEXO" scheme="http://bentoule.github.io/categories/HEXO/"/>
    
    
      <category term="HEXO" scheme="http://bentoule.github.io/tags/HEXO/"/>
    
      <category term="HEXO配置" scheme="http://bentoule.github.io/tags/HEXO%E9%85%8D%E7%BD%AE/"/>
    
      <category term="Github" scheme="http://bentoule.github.io/tags/Github/"/>
    
  </entry>
  
  <entry>
    <title>GitHub+Hexo 配置系列教程 -HEXO配置 （一）</title>
    <link href="http://bentoule.github.io/2016/08/21/GitHub-Hexo-%E9%85%8D%E7%BD%AE%E7%B3%BB%E5%88%97%E6%95%99%E7%A8%8B-HEXO%E9%85%8D%E7%BD%AE-%EF%BC%88%E4%B8%80%EF%BC%89/"/>
    <id>http://bentoule.github.io/2016/08/21/GitHub-Hexo-配置系列教程-HEXO配置-（一）/</id>
    <published>2016-08-21T00:13:13.000Z</published>
    <updated>2016-08-23T02:11:41.204Z</updated>
    
    <content type="html"><![CDATA[<h1 id="什么是Hexo"><a href="#什么是Hexo" class="headerlink" title="什么是Hexo"></a>什么是Hexo</h1><p>Hexo是一个快速、简洁且高效的博客框架,可以方便的生成静态网页托管在github和Heroku上。作者是来自台湾的@tommy351。引用@tommy351的话，Hexo:</p>
<a id="more"></a>
<ul>
<li><p>快速、简单且功能强大的 Node.js 博客框架。</p>
</li>
<li><p>A fast, simple &amp; powerful blog framework, powered by Node.js.</p>
</li>
</ul>
<p>类似于jekyll、Octopress、Wordpress，我们可以用hexo创建自己的博客，托管到github或Heroku上，绑定自己的域名，用markdown写文章。本博客即使用hexo创建并托管在github上。</p>
<h1 id="为什么要用Hexo来写博客"><a href="#为什么要用Hexo来写博客" class="headerlink" title="为什么要用Hexo来写博客"></a>为什么要用Hexo来写博客</h1><p>引用原作者的话来说: </p>
<ul>
<li><p>超快速度: Node.js 所带来的超快生成速度，让上百个页面在几秒内瞬间完成渲染。</p>
</li>
<li><p>支持 Markdown: Hexo 支持 GitHub Flavored Markdown 的所有功能，甚至可以整合 Octopress 的大多数插件。</p>
</li>
<li><p>一键部署: 只需一条指令即可部署到 GitHub Pages, Heroku 或其他网站。</p>
</li>
<li><p>丰富的插件: Hexo 拥有强大的插件系统，安装插件可以让 Hexo 支持 Jade, CoffeeScript。</p>
</li>
</ul>
<p>另外,还有几个优点另Hexo这么风靡:</p>
<ul>
<li><p>易用. 部署的话,就算是小白,也很简单, 而且平时用到的命令仅需要 hexo new hexo server hexo generate hexo deploy四个命令即可,不像Jekyll需要很多繁琐的git命令,而且目前命令已经可以缩写成hexo n hexo d hexo s hexo g了,更加简单好记易用</p>
</li>
<li><p>轻便. 文件少,小,易理解,方便自定义更改</p>
</li>
<li><p>用户多. 用户的量级虽然比不上Jekyll,但遇到什么问题基本在网上搜索出来就能搞定了.</p>
</li>
</ul>
<h1 id="使用Hexo需要花多大的成本"><a href="#使用Hexo需要花多大的成本" class="headerlink" title="使用Hexo需要花多大的成本"></a>使用Hexo需要花多大的成本</h1><ul>
<li>这是一个免费的开源的博客框架,任何人都可以修改和使用</li>
<li>Hexo的使用需要使用到GitHub,Git,MardDown,Node.js这几种工具,另外部分插件,主题,widget需要自己安装,设置.所以使用Hexo相对有一些计算机基础的人比较简单, 但是即使是小白,只要按照这个教程,也可以很快的入手.</li>
</ul>
<h1 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h1><p>本博客所用Hexo版本为3.2.0,部分文件或与其他版本不同.<br>本教程只针对Windows版本,</p>
<h1 id="Hexo博客搭建"><a href="#Hexo博客搭建" class="headerlink" title="Hexo博客搭建"></a>Hexo博客搭建</h1><h2 id="安装Git"><a href="#安装Git" class="headerlink" title="安装Git"></a>安装Git</h2><p>推荐大家使用：msysgit <a href="https://git-for-windows.github.io/" title="点击这里前往官方网站下载" target="_blank" rel="external">https://git-for-windows.github.io/</a><br>下载并安装Git即可完成. </p>
<h2 id="安装Node-js"><a href="#安装Node-js" class="headerlink" title="安装Node.js"></a>安装Node.js</h2><p>windows环境下的Node.js的安装很简单,只需要下载客户端一路next就行了,我选择的是<a href="http://https://nodejs.org/en/" target="_blank" rel="external">v6.4.0LTS版</a>本64位的 </p>
<ul>
<li>查看Node.js是否安装完成,在win+r中输入cmd命令窗口弹出后,输入node -v查看node版本</li>
</ul>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">node -v</div></pre></td></tr></table></figure>
<p><img src="/img/2016/08/21/1.png" alt=""></p>
<h2 id="安装Hexo-需要注意"><a href="#安装Hexo-需要注意" class="headerlink" title="安装Hexo (需要注意)"></a>安装Hexo (需要注意)</h2><p>利用命令行安装hexo</p>
<p>Node.js安装完成后,在电脑任意位置,右键,选择 GitBash ,执行npm命令</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm install -g hexo</div></pre></td></tr></table></figure>
<p>创建本地hexo文件夹(地址名字可自定义)</p>
<p>安装完成后,在本地选择一个目标文件夹(如:F:\Hexo),注意:在F:\Hexo文件夹内右键,选择GitBush,执行以下指令,Hexo就会自动在目标文件夹下创建建立网站所需要的文件,一分钟左右会执行完成<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo init</div></pre></td></tr></table></figure></p>
<p><strong>效果如下:</strong></p>
<p><img src="/img/2016/08/21/2.png" alt=""></p>
<p>安装依赖包,该命令执行后没有什么提示,完成后的本地文件夹列表为图示,可能会有所不同<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo install</div></pre></td></tr></table></figure></p>
<p><strong>初始化完成后目录图:</strong><br><img src="/img/2016/08/21/3.png" alt=""></p>
<p>注意:因Hexo 3.0以后把服务器独立成了单独的模块,所以还需要安装hexo-server才可以使用,执行命令<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm install hexo-server –save</div></pre></td></tr></table></figure></p>
<p><strong>本地校验查看</strong></p>
<p>到目前为止,我们已经搭建起本地的hexo博客了,执行以下命令(在F:\Hexo)中,然后根据提示到浏览器中进行访问,地址为 localhost:4000</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo g 或者 hexo generate</div></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo server 或者 hexo s</div></pre></td></tr></table></figure>
<p><strong>图示为: </strong><br><img src="/img/2016/08/21/4.png" alt=""></p>
<blockquote>
<p>如果访问成功,即代表了本地博客配置成功,但有以下几点需要注意</p>
</blockquote>
<ul>
<li>每次想访问本地博客,至少需要执行hexo s命令,这样才相当于服务启动,然后才可访问</li>
<li>有的电脑4000端口可能被占用,导致每次访问localhost:4000提示一直找不到网页,这时就需要修改端口号,执行命令 hexo s -p 5000 即代表使用-p将端口号改为了5000,访问网址为localhost:5000</li>
</ul>
<p><img src="/img/2016/08/21/5.png" alt=""></p>
<p><strong>成功图示 :</strong></p>
<p><img src="/img/2016/08/21/6.png" alt=""></p>
<p><strong>按下Ctrl+C即可停止服务</strong></p>
<p>如果进行到这一步,本地博客已经成功搭建起来了,当然只能在本地开启服务的时候才能访问,别人是看不到的,下面我们就要部署到GitHub上面,将Hexo与GitHub进行关联起来;</p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;什么是Hexo&quot;&gt;&lt;a href=&quot;#什么是Hexo&quot; class=&quot;headerlink&quot; title=&quot;什么是Hexo&quot;&gt;&lt;/a&gt;什么是Hexo&lt;/h1&gt;&lt;p&gt;Hexo是一个快速、简洁且高效的博客框架,可以方便的生成静态网页托管在github和Heroku上。作者是来自台湾的@tommy351。引用@tommy351的话，Hexo:&lt;/p&gt;
    
    </summary>
    
      <category term="HEXO" scheme="http://bentoule.github.io/categories/HEXO/"/>
    
    
      <category term="HEXO" scheme="http://bentoule.github.io/tags/HEXO/"/>
    
      <category term="HEXO配置" scheme="http://bentoule.github.io/tags/HEXO%E9%85%8D%E7%BD%AE/"/>
    
      <category term="Github" scheme="http://bentoule.github.io/tags/Github/"/>
    
      <category term="node.js" scheme="http://bentoule.github.io/tags/node-js/"/>
    
      <category term="GIT" scheme="http://bentoule.github.io/tags/GIT/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://bentoule.github.io/2016/08/20/hello-world/"/>
    <id>http://bentoule.github.io/2016/08/20/hello-world/</id>
    <published>2016-08-20T00:13:13.000Z</published>
    <updated>2016-08-23T01:03:49.259Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.<br><a id="more"></a></p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;a href=&quot;https://hexo.io/docs/troubleshooting.html&quot;&gt;troubleshooting&lt;/a&gt; or you can ask me on &lt;a href=&quot;https://github.com/hexojs/hexo/issues&quot;&gt;GitHub&lt;/a&gt;.&lt;br&gt;
    
    </summary>
    
    
  </entry>
  
</feed>
